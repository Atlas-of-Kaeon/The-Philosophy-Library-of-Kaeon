-
	Universal Preprocessor
-
	-
		Philosophy
	-
		-
			The Universal Preprocessor is a preprocessor that allows code from any programming
			language to be embedded as a preprocessor into any text file.
		-
	-
		Principles
	-
		-
			Token Sequences
		-
			-
				The Universal Preprocessor requires seven unique sequences of characters to be
				defined: the open sequence, the open directive sequence, the close protocol
				sequence, the open content sequence, the close directive sequence, the null
				sequence, and the wildcard sequence.
				
				It is not permitted for the sequences to be defined such that there may be any
				instances where two or more sequences conflict at a given location.
			-
		-
			Directives
		-
			-
				Preprocessor directives in the Universal Preprocessor shall be encoded in
				directives.
				
				Directives typically begin with an open sequence, which is followed by the name of
				the language the directive is written in, referred to as the directive language,
				which is followed by an open content sequence, which is followed by any valid code
				written in the directive language, referred to as the directive content, and end
				with a close directive sequence. A directive following this format is called an
				explicit directive.

				Alternatively, a directive may begin with an open directive sequence, which is
				followed by any valid code written in any language, referred to as the directive
				content, and end with a close directive sequence. A directive following this format
				is called an implicit directive.

				Token sequences used for Universal Preprocessor directives can be nullified in any
				manner otherwise used to nullify or escape characters by the host language if
				outside a directive, or by the directive language if inside a directive.

				If said token sequences are not escaped within another directive, then a nested
				directive shall operate on the directive content.
			-
		-
			Host Language
		-
			-
				The host language determines how the tokens used by the Universal Preprocessor are
				escaped when located outside other directives.

				The host language may be explicitly set using a host protocol, which sets the host
				language for all Universal Preprocessor tokens that follow it.
				
				Host protocols begin with an open sequence, which is followed by the name of the
				language to set as the host language, which is followed by a close protocol
				sequence.

				If the host language is not declared, or is declared as using a null sequence, then
				the host language shall be plain text, and there shall be no protocol for escaping
				tokens.
			-
		-
			Execution
		-
			-
				Each directive shall execute as code in the language of its directive content in
				order of its placement.

				The state of the preprocessor shall carry over from directive to directive to
				whatever extent possible.

				Each directive shall take three arguments, the first being the source code without
				the unescaped directives as a string, the second being the index of its respective
				starting open paren as an integer number, and the third being a list of
				miscellaneous values passed to the Universal Preprocessor as arguments.

				Any text logged to standard out by the code will be injected into the source text
				at the index of the starting tag, but if the code returns a non-null value, the
				string form of said value shall replace the source text altogether.
			-
		-
			Auto Detection
		-
			-
				For an implicit directive, or for an explicit directive where the directive
				language is specified using a wildcard sequence, the language of the directive
				content shall be detected automatically.
			-
		-
			Commenting
		-
			-
				If the directive language for a given directive is declared using a null sequence,
				or as any string not recognized as a language alias, then the contents of the
				directive shall not execute, thus making the directive function as a comment.
			-