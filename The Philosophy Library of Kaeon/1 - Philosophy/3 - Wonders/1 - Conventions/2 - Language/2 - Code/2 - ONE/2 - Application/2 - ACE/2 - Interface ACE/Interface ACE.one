-
	Interface ACE
-
	-
		Philosophy
	-
		-
			Interface ACE is an ACE format for encoding the content of interface modules.
		-
	-
		Principles
	-
		-
			Format
		-
			-
				Interface Element
			-
				-
					An interface element is an ACE element for which represents an interface
					module.

					The content of an interface element shall define the name of the interface it
					specifies.

					An interface element may be any child of an element which has the content
					"Use", and for which its children conform to interface ACE.

					As such, Kaeon FUSION may use interface elements as interfaces via the
					interface use protocol, and thus may Kaeon FUSION programs serve as interface
					modules themselves via their return values should said return values, following
					their execution, be either their respective union interface or another
					interface module, and the default form in which Kaeon FUSION shall return its
					union interface shall be as an interface ACE string in the standard ONE
					language.
				-
			-
				Structure
			-
				-
					Contents
				-
					-
						An interface element may have a child with the content "Contents", said
						child being a package element, which represents a utility package.

						A package element may have a child with the content "Packages", which may
						have an indefinite number of package elements as children, the content of
						said children being the names of the utility packages they represent.

						A package element may have a child with the content "Utilities", which may
						have an indefinite number of utility elements as children, the content of
						said children being the names of the utilities they represent.

						A utility element may have a child with the content "Versions", which may
						have an indefinite number of version elements as children, the content of
						said children being the names of the utility versions they represent of the
						utilities to which they pertain.

						Utility and version elements may have a child with the content
						"Properties", which may have any children, which shall specify utility
						properties and version properties of the utility or version to which they
						pertain.

						A version element may have a child with the content "Locations", which may
						have an indefinite number of children, the content of said children being
						possible locations at which the source of the respective version may be
						found.

						A version element may have a child with the content "Source", which shall
						have one child, the content of said child being the source of the
						respective version.
					-
				-
					Connections
				-
					-
						An interface element may have a child with the content "Connections".

						The connections element may have a child with the content "Extensions", and
						may have a child with the content "References".

						Both the extensions and references elements may have an indefinite number
						of connection elements as children, each of which represent external
						interface modules, with the children of the extensions element representing
						interface modules for which the contents are to be taken as part of the
						interface module to which said element belongs, and the children of the
						references element representing interface modules which are not.

						A connection element shall have the name of the external interface module
						it references as its content, and may have an indefinite number of elements
						as children, the content of which shall specify possible locations of said
						external interface module.
					-
		-
			Standards
		-
			-
				Letter Case
			-
				-
					The letter case of element content in interface ACE is irrelevant.
				-
			-
				Interface ACE Conventions
			-
				-
					A codified protocol regarding how the children of the properties elements may
					be used to specify interface properties is referred to as an interface ACE
					convention.
				-